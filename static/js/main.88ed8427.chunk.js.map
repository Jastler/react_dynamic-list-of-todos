{"version":3,"sources":["api/api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["API_URL","TodoList","state","todos","props","select","filterTitle","event","value","target","filterTodo","filter","todo","title","includes","setState","handleSelection","name","completed","selectUser","this","className","placeholder","onChange","map","key","id","classNames","type","readOnly","onClick","userId","React","Component","CurrentUser","user","getUserInfo","prevProps","a","fetch","then","response","json","data","clearUser","email","phone","App","selectedUserId","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88ed8427.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-api.herokuapp.com/`;\n\nexport function getAll() {\n  return fetch(`${API_URL}todos`)\n    .then(response => response.json());\n}\n\nexport function getId(userId) {\n  return fetch(`${API_URL}users/${userId}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    todos: this.props.todos,\n    select: '',\n  }\n\n  filterTitle = (event) => {\n    const { value } = event.target;\n    const { todos } = this.props;\n    const filterTodo = todos\n      .filter(todo => (todo.title ? todo.title.includes(value) : false));\n\n    this.setState({\n      todos: filterTodo,\n    });\n  }\n\n  handleSelection = (event) => {\n    const { name, value } = event.target;\n    let filterTodo = this.props.todos;\n\n    switch (value) {\n      case 'completed':\n        filterTodo = filterTodo.filter(todo => todo.completed);\n        break;\n      case 'active':\n        filterTodo = filterTodo.filter(todo => !todo.completed);\n        break;\n      default:\n      case 'all':\n        break;\n    }\n\n    this.setState({\n      todos: filterTodo,\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { selectUser } = this.props;\n    const { todos, select } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div>\n          <input\n            placeholder=\"Filter\"\n            onChange={this.filterTitle}\n          />\n        </div>\n        <select\n          name=\"select\"\n          value={select}\n          onChange={this.handleSelection}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item',\n                  { 'TodoList__item--unchecked': !todo.completed },\n                  { 'TodoList__item--checked': todo.completed })}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getId } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.getUserInfo();\n    }\n  }\n\n  async getUserInfo() {\n    const user = await getId(this.props.userId);\n\n    this.setState({ user: user.data });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        {!user ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:\n                {' '}\n                {user.id}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n            <button\n              type=\"button\"\n              onClick={() => clearUser()}\n            >\n              Clear\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getAll } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getAll();\n\n    this.setState({ todos: todos.data.filter(todo => todo.title) });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0 && (\n            <TodoList\n              selectUser={(userId) => {\n                this.setState({ selectedUserId: userId });\n              }}\n              todos={todos}\n            />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}